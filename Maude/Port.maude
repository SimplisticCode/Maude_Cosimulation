(omod Ports is 
 protecting QID + NAT .
 sorts PortId Mode PortStatus PortIdSet PStack .
 subsorts Qid < PortId < Oid .
 subsort PortId < PortIdSet .

 sorts Connection SUID EPortId EPortIdSet PScc .
 subsort EPortId < EPortIdSet < PScc .
 subsort EPortId < PStack .
 subsorts Qid < SUID < Oid .
 op _==>_ : EPortId EPortId -> Connection [ctor format(niy! d d d)] .
 subsort Connection < Configuration .
 op _!_ : SUID PortId -> EPortId [ctor] .

 class Port | time : Nat, status : PortStatus . 
 class Input | type : Mode .
 class Output | dependsOn : PortIdSet .
 subclasses Input Output < Port . 
 ops d r : -> Mode [ctor] .   *** d = delayed, r = Reactive.
 ops Def Undef : -> PortStatus [ctor] .

 op emptySet : -> PortIdSet [ctor] .
 op _::_ : PortIdSet PortIdSet -> PortIdSet [ctor assoc comm id: emptySet] .
 
 op emptyLoop : -> EPortIdSet [ctor] .
 op _;;_ : EPortIdSet EPortIdSet -> EPortIdSet [ctor assoc comm id: emptyLoop] .

 op emptyST : -> PStack [ctor] .
 op _##_ : PStack PStack -> PStack [ctor assoc id: emptyST] .

 op sccNoNodes : -> PScc [ctor] .
 op _**_ : PScc PScc -> PScc [ctor assoc comm id: sccNoNodes] .

 op _in_ : EPortId EPortIdSet -> Bool . 
 op _in_ : Connection Configuration -> Bool . 

 op elems : PStack -> EPortIdSet .

 var PORT : EPortId .
 var PORTSET : EPortIdSet .
 var CONF : Configuration .
 var CON : Connection .
 var STACK : PStack .

 eq elems(emptyST) = emptyLoop .
 eq elems(PORT ## STACK) = PORT ;; elems(STACK) .

 eq PORT in PORT ;; PORTSET = true .
 eq PORT in PORTSET = false [owise] .

 eq CON in CON CONF = true .
 eq CON in CONF = false [owise] .

 op size : EPortIdSet -> Nat .
 eq size(emptyLoop) = 0 .
 eq size(PORT ;; PORTSET) = 1 + size(PORTSET) .
endom)
